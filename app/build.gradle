buildscript {

    repositories {
        mavenCentral()
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.21.2'
    }

}

apply plugin: 'com.android.application'
apply plugin: 'com.neenbedankt.android-apt'
apply plugin: 'io.fabric'
/* The following should be moved from build ? maybe later */


repositories {
    mavenCentral()
    maven { url "https://jitpack.io" }
    maven { url 'https://maven.fabric.io/public' }
}
// Manifest version information!
def versionMajor = 1
def versionMinor = 3
def versionPatch = 2
def versionSmallPatch = 1

android {
    compileSdkVersion 23
    buildToolsVersion '24.0.2'

    defaultConfig {
        applicationId 'com.marked.pixsee'
        minSdkVersion 16
        targetSdkVersion 23
        versionCode versionMajor * 1000 + versionMinor * 100 + versionPatch * 10 +versionSmallPatch
        versionName "${versionMajor}.${versionMinor}.${versionPatch}"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true

        // uncomment splits to decrease app size - google recommends to split only if the app is > 100mb
//        splits {
//            abi {
//                enable true
//                reset()
//                include 'x86', 'x86_64', 'armeabi', 'armeabi-v7a', 'arm64-v8a','mips','mips64'
//            }
//        }
        ndk {
            abiFilters 'x86', 'x86_64', 'armeabi', 'armeabi-v7a', 'arm64-v8a'
        }
        externalNativeBuild {
            cmake {
                arguments '-DANDROID_PLATFORM=android-13', '-DANDROID_TOOLCHAIN=clang', '-DANDROID_STL=gnustl_static'
                cppFlags "-frtti", "-fexceptions"
            }
        }
    }
    archivesBaseName = rootProject.projectDir.getName()
    dexOptions {
        incremental true
    }
    buildTypes {
        def String = "String"
        def Server_ip = "SERVER_IP"

        release {
            debuggable false
            buildConfigField(String, Server_ip, "\"46.101.225.31\"")
            shrinkResources true
            minifyEnabled true
            useProguard true
            proguardFiles(file('./proguard').listFiles())
//            ndk {
//                abiFilters "armeabi-v7a"
//            }
            multiDexEnabled true
        }
        debug {
            debuggable true
            buildConfigField(String, Server_ip, "\"192.168.0.104\"")
//            shrinkResources true
//            minifyEnabled true
//            proguardFiles(files { file('./proguard').listFiles() })
            multiDexEnabled true

        }
    }
    productFlavors {
        prod {

        }
        mock {

        }
    }

    // Always show the result of every unit test, even if it passes.
    testOptions.unitTests.all {
        testLogging {
            events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
        }
    }
    externalNativeBuild {
        cmake {
            path 'src/main/jni/CMakeLists.txt'
        }
    }
}

dependencies {
    def supportVersion = "23.4.0"
    compile project(':openCVLibrary310')
    compile('io.socket:socket.io-client:0.6.3') {
        exclude group: 'org.json', module: 'json'
    }
    compile('com.crashlytics.sdk.android:crashlytics:2.5.5@aar') {
        transitive = true;
    }
    // GOOGLE
    compile "com.android.support:appcompat-v7: $supportVersion"
    compile "com.android.support:recyclerview-v7: $supportVersion"
    compile "com.android.support:design: $supportVersion"
    compile 'com.google.firebase:firebase-messaging:9.2.1'
    // Firebase
    compile 'com.google.android.gms:play-services-vision:9.2.1'
    // DESIGN
    compile 'com.davemorrissey.labs:subsampling-scale-image-view:3.4.1'
    // Subsampling scale image
    compile 'me.himanshusoni.chatmessageview:chat-message-view:1.0.3'
    // ChatView
    compile 'com.github.justzak:dilatingdotsprogressbar:1.0.1'
    // Dilating Dots
    compile 'org.rajawali3d:rajawali:1.1.505-SNAPSHOT@aar'
    // Rajawali
    compile 'com.aurelhubert:ahbottomnavigation:1.2.3'
    // Bottom navigation
    compile 'com.github.clans:fab:1.6.2'
    // Fab
    compile 'tyrantgit:explosionfield:1.0.1'
    // Explosion field
    compile 'com.github.zzz40500:AndroidSweetSheet:1.1.0'
    compile('com.github.ozodrukh:CircularReveal:2.0.1@aar') { // Circular Reveal
        transitive = true;
    }
    // FACEBOOK
    compile 'com.facebook.fresco:fresco:0.11.0'
    // Fresco
    compile 'com.facebook.fresco:imagepipeline-okhttp:0.9.0'
    // Fresco Pipeline
    compile 'com.facebook.android:facebook-android-sdk:[4,5]'
    // Facebook SDK
    // RX
    compile 'io.reactivex:rxjava:1.1.8'
    // RxJava
    compile 'io.reactivex:rxandroid:1.2.1'
    // RxAndroid
    compile 'com.tbruyelle.rxpermissions:rxpermissions:0.7.0@aar'
    // RxPermissions
    compile 'com.jakewharton.rxbinding:rxbinding-appcompat-v7:0.4.0'
    // RxBindings
    // RETROFIT
    compile 'com.squareup.retrofit2:retrofit:2.1.0'
    compile 'com.squareup.retrofit2:converter-gson:2.1.0'
    compile 'com.squareup.retrofit2:adapter-rxjava:2.1.0'
    compile 'com.squareup.okhttp3:logging-interceptor:3.3.1'
    // DAGGER
    compile 'com.google.dagger:dagger:2.6'
    apt "com.google.dagger:dagger-compiler:2.6"
    provided 'com.google.dagger:dagger-compiler:2.6'
    provided 'org.glassfish:javax.annotation:10.0-b28'
    // TESTING
    testCompile 'junit:junit:4.12'
    testCompile 'org.mockito:mockito-core:1.10.19'
    testCompile 'org.robolectric:robolectric:3.1.1'
    testCompile 'org.robolectric:shadows-play-services:3.1'
    //    testCompile 'org.robolectric:shadows-httpclient:3.1.1'
    testCompile 'org.robolectric:shadows-support-v4:3.1.1'
    testCompile 'org.khronos:opengl-api:gl1.1-android-2.1_r1'
    androidTestCompile 'com.android.support.test:runner:0.5'
    androidTestCompile 'com.android.support.test:rules:0.5'
    androidTestCompile 'com.android.support.test.espresso:espresso-core:2.2.2'
    androidTestCompile 'com.android.support.test.espresso:espresso-intents:2.2.2'
    androidTestCompile('com.android.support.test.espresso:espresso-contrib:2.2.2') {
        exclude group: "com.android.support"
        exclude module: 'recyclerview-v7'
        exclude module: "support-annotations"
    }
}

configurations.all {
    resolutionStrategy.force 'com.android.support:support-annotations:23.4.0'
}
apply plugin: 'com.google.gms.google-services'

/*
All direct/transitive dependencies shared between your test and production APKs need to be
excluded from the test APK! This is necessary because both APKs will contain the same classes. Not
excluding these dependencies from your test configuration will result in an dex pre-verifier error
at runtime. More info in this tools bug: (https://code.google.com/p/android/issues/detail?id=192497)
*/
//configurations.compile.dependencies.each { compileDependency ->
//    println "Excluding compile dependency: ${compileDependency.getName()}"
//    configurations.androidTestCompile.dependencies.each { androidTestCompileDependency ->
//        configurations.androidTestCompile.exclude module: "${compileDependency.getName()}"
//    }
//}